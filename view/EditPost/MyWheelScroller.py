from PyQt5.QtCore import QObject,pyqtSignalimport threading, timeclass MyWheelScroller(QObject):    decrement_offset = pyqtSignal()    increment_offset = pyqtSignal()    UP_WHEEL_ACTION  =  1    DOWN_WHEEN_ACTION = 0    TIMEOUT_BETWEEN_EXECUIONS = 0.2    def __init__(self):        super(MyWheelScroller, self).__init__()        self.list_of_scroll_actions = [] # 0 - event down wheel, 1 - event up wheel        self.__offset_thread = None    def start_offset_thread(self):        if self.__offset_thread is None:            self.__offset_thread = threading.Thread(target=self.handle_pitcures_offsets, name='offset_thread')            self.__offset_thread.start()    def handle_pitcures_offsets(self):        while(True):            if len(self.list_of_scroll_actions) > 0:                if self.list_of_scroll_actions.pop() == MyWheelScroller.UP_WHEEL_ACTION:                    self.increment_offset.emit()                else:                    self.decrement_offset.emit()            time.sleep(MyWheelScroller.TIMEOUT_BETWEEN_EXECUIONS)    def prepend_new_scroll_action(self, action_type):        if len(self.list_of_scroll_actions) == 0 or self.list_of_scroll_actions[0] != action_type:            self.list_of_scroll_actions = [action_type] + self.list_of_scroll_actions        self.start_offset_thread()